# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jJS6cQeXRh8vCETFYkdosPVqgn7YgYIG
"""

import pandas as pd
import tkinter as tk
from tkinter import messagebox

class WordManager:
    def __init__(self, root, db_path):
        self.root = root
        self.root.title("단어 관리자")
        self.db_path = db_path
        self.load_words_from_excel()

        # UI 설정
        tk.Label(root, text="단어:").grid(row=0, column=0)
        self.word_entry = tk.Entry(root)
        self.word_entry.grid(row=0, column=1)

        tk.Label(root, text="정의:").grid(row=1, column=0)
        self.definition_entry = tk.Entry(root)
        self.definition_entry.grid(row=1, column=1)

        tk.Button(root, text="단어 추가", command=self.add_word).grid(row=2, column=0)
        tk.Button(root, text="단어 업데이트", command=self.update_word).grid(row=2, column=1)
        tk.Button(root, text="단어 삭제", command=self.delete_word).grid(row=2, column=2)

        self.words_listbox = tk.Listbox(root, height=8, width=50)
        self.words_listbox.grid(row=3, column=0, columnspan=3)
        self.refresh_words_listbox()

    def load_words_from_excel(self):
        self.words = {}
        try:
            df = pd.read_excel(self.db_path, engine='openpyxl')
            for index, row in df.iterrows():
                self.words[row['단어']] = row['정의']
        except FileNotFoundError:
            messagebox.showinfo("경고", "단어장 파일을 찾을 수 없습니다.")
    
    def save_words_to_excel(self):
        df = pd.DataFrame(list(self.words.items()), columns=['단어', '정의'])
        df.to_excel(self.db_path, index=False, engine='openpyxl')

    def add_word(self):
        word = self.word_entry.get()
        definition = self.definition_entry.get()
        if word and definition:
            if word not in self.words:
                self.words[word] = definition
                self.refresh_words_listbox()
                self.save_words_to_excel()
                messagebox.showinfo("성공", "단어가 성공적으로 추가되었습니다.")
                self.word_entry.delete(0, tk.END)
                self.definition_entry.delete(0, tk.END)
            else:
                messagebox.showinfo("경고", "이미 존재하는 단어입니다.")
        else:
            messagebox.showinfo("경고", "단어와 정의를 모두 입력해주세요.")

    def update_word(self):
        word = self.word_entry.get()
        definition = self.definition_entry.get()
        if word in self.words:
            self.words[word] = definition
            self.refresh_words_listbox()
            self.save_words_to_excel()
            self.word_entry.delete(0, tk.END)
            self.definition_entry.delete(0, tk.END)
        else:
            messagebox.showinfo("경고", "업데이트할 단어를 찾을 수 없습니다.")

    def delete_word(self):
        word = self.word_entry.get()
        if word in self.words:
            del self.words[word]
            self.refresh_words_listbox()
            self.save_words_to_excel()
            self.word_entry.delete(0, tk.END)
            messagebox.showinfo("성공", "단어가 성공적으로 삭제되었습니다.")
        else:
            messagebox.showinfo("경고", "삭제할 단어를 찾을 수 없습니다.")

    def refresh_words_listbox(self):
        self.words_listbox.delete(0, tk.END)
        for word, definition in self.words.items():
            self.words_listbox.insert(tk.END, f"{word}: {definition}")

if __name__ == "__main__":
    root = tk.Tk()
    db_path = 'db/단어장 파일.xlsx'
    app = WordManager(root, db_path)
    root.mainloop()
